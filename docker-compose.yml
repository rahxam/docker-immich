services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:v1.129.0
    networks:
      - internal
      - traefik
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        delay: 20s
        monitor: 10s
      labels:
        - "traefik.enable=true"
        - "traefik.stack.network=traefik"  

        - "traefik.http.routers.immich.rule=Host(`immich.hartig.es`)"
        - "traefik.http.routers.immich.entrypoints=https"
        - "traefik.http.routers.immich.tls=true"

        - "traefik.http.services.immich.loadbalancer.server.port=2283"

        
        - "traefik.constraint=proxy-public"
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - /home/docker/mnt/fast/immich_data/upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: Europe/Berlin
      DB_PASSWORD: postgres
      DB_USERNAME: postgres
      DB_DATABASE_NAME: immich
      DB_HOSTNAME: postgres
      REDIS_HOSTNAME: redis
    depends_on:
      - redis
      - postgres
    healthcheck:
      disable: false

  immich-machine-learning:
    deploy:
      mode: replicated
      replicas: 1
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:v1.129.0
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    networks:
      - internal
    environment:
      TZ: Europe/Berlin
      DB_PASSWORD: postgres
      DB_USERNAME: postgres
      DB_DATABASE_NAME: immich
      DB_HOSTNAME: postgres
      REDIS_HOSTNAME: redis
    healthcheck:
      disable: false

  redis:
    networks:
      - internal
    deploy:
      mode: replicated
      replicas: 1
    image: docker.io/redis:6-alpine
    healthcheck:
      test: redis-cli ping || exit 1

  postgres:
    networks:
      - internal
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.labels.database == true
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on

volumes:
  model-cache:
  postgres:

networks:
  traefik:
    external: true
  internal:
